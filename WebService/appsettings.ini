[DeviceSimulationService]
webservice_port = 9003
iothub_connstring = "HostName=drone-simulator43692.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=AZSRRy8ChCGOf8DBNR5/PrRa4l7vk0G16n4XumEkOwQ="
# Note: in linux containers, the `data` folder is a symlink to /app/data
# which can be mounted to inject custom device models and scripts.
device_models_folder = ./data/devicemodels/
device_models_scripts_folder = ./data/devicemodels/scripts/
# Folder where the service will store the custom connection string, if provided
iothub_data_folder = ./data/iothub/
# Disable twin read/writes and methods, to reduce the number of threads
# and open connections.
twin_read_write_enabled = false


[StorageAdapterService]
webservice_url = "http://localhost:9022/v1"
webservice_timeout = 60000


[DeviceSimulationService:Deployment]
# AAD Domain of the Azure subscription where the Azure IoT Hub is deployed.
# The value is optional because the service can be deployed without a hub.
# The info is used to create a URL taking to the IoT Hub metrics in the Azure portal.
azure_subscription_domain = "microsoft.onmicrosoft.com"
# Azure subscription where the Azure IoT Hub is deployed, e.g. "mytest.onmicrosoft.com".
# The value is optional because the service can be deployed without a hub.
# The value is used to create a URL taking to the IoT Hub metrics in the Azure portal.
azure_subscription_id = "d0d422cd-e446-42aa-a2e2-e88806508d3b"
# Azure resource group where the Azure IoT Hub is deployed, e.g. "abcd1234-5678-1234-abcd-abcd5678abcd".
# The value is optional because the service can be deployed without a hub.
# The value is used to create a URL taking to the IoT Hub metrics in the Azure portal.
azure_resource_group = "drone-simulator"
# IoT Hub name, e.g. "mytest3507e89".
# The value is optional because the service can be deployed without a hub.
# The value is used to create a URL taking to the IoT Hub metrics in the Azure portal.
azure_iothub_name = "drone-simulator43692"


[DeviceSimulationService:Logging]
# Application log levels: Debug, Info, Warn, Error
# Default: Warn
LogLevel = Debug
# Whether to log the ProcessId, true by default
IncludeProcessId = true
# How to format the datetime in the logs
# example: DateFormat = "yyyy-MM-dd HH:mm:ss.fff"
DateFormat = "yyyy-MM-dd HH:mm:ss.fff"
# Prefix to add to the items listed in BlackListSources and WhiteListSources
# example: BWListPrefix = "Microsoft.Azure.IoTSolutions.DeviceSimulation."
BWListPrefix = "Microsoft.Azure.IoTSolutions.DeviceSimulation."
# Comma separated list of classes and methods to ignore, i.e. discard logs from
# example: BlackListSources = "SimulationAgent.Program,Simulation.*,HttpClient.*"
BlackListSources = ""
# Comma separated list of classes and methods to include, i.e. discard everything else
# example: WhiteListSources = "HttpClient.*"
WhiteListSources = ""
# Whether to generate extra log files to diagnose the simulation. This is disk I/O intensive
# and most likely affects the simulation performance. Enable this option only for development
# to get detailed information about the state of each actor and each device.
# Default: false
ExtraDiagnostics = false
# Folder to store the extra diagnostics. Logging is disabled if the folder cannot
# be created or is not writable.
ExtraDiagnosticsPath = "/tmp/sim/"


[DeviceSimulationService:RateLimits]
# S3:  5000/min/unit (= 83.3/sec/unit)
# S2:   100/min/unit (= 1.67/sec/unit)
# S1:   100/min/unit (= 1.67/sec/unit)
# F1:   100/min      (= 1.67/sec)
registry_operations_per_minute = 100
# S3:  50/sec/unit
# S2: higher of 10/sec or 1/sec/unit
# S1:  10/sec
# F1:  10/sec
twin_reads_per_second = 10
# S3:  50/sec/unit
# S2: higher of 10/sec or 1/sec/unit
# S1:  10/sec
# F1:  10/sec
twin_writes_per_second = 10
# S3:  6000/sec/unit
# S2:   120/sec/unit
# S1: higher of 100/sec or 12/sec/unit
# F1:   100/sec
device_connections_per_second = 2000
# S3:  6000/sec/unit
# S2:   120/sec/unit
# S1: higher of 100/sec or 12/sec/unit
# F1:   100/sec
device_to_cloud_messages_per_second = 3000
# S3:  300M/day/unit (= 208333.33/min/day)
# S2:    6M/day/unit (=   4166.67/min/unit)
# S1:  400k/day/unit (=    277.78/min/unit)
# F1:  8000/day      (=      5.56/min)
device_to_cloud_messages_per_day = 300000000


[DeviceSimulationService:ClientAuth]
;; Current auth type, only "JWT" is currently supported.
auth_type="JWT"
;; This can be changed to false, for example during development,
;; to allow invalid/missing authorizations.
;; Default: true
auth_required="${?PCS_AUTH_REQUIRED}"
;; Can be used when running services on multiple hostnames and/or ports
;; e.g. "{ 'origins': ['*'], 'methods': ['*'], 'headers': ['*'] }" to allow everything.
;; Comment it or leave it empty to disable CORS.
;; Default: empty
cors_whitelist = "${?PCS_CORS_WHITELIST}"


[DeviceSimulationService:ClientAuth:JWT]
; Trusted algorithms
; Default: RS256, RS384, RS512
allowed_algorithms="RS256"
; Identifies the security token service (STS) that constructs and returns the token.
; In the tokens that Azure AD returns, the issuer is sts.windows.net. The GUID in
; the Issuer claim value is the tenant ID of the Azure AD directory. The tenant ID
; is an immutable and reliable identifier of the directory.
; Used to verify that tokens are issued by Azure AD.
; When using Azure Active Directory, the format of the Issuer is:
; https://sts.windows.net/<tenant Id>/
; example: issuer="https://sts.windows.net/fa01ade2-2365-4dd1-a084-a6ef027090fc/"
issuer="${?PCS_AUTH_ISSUER}"
; Used to verify that tokens are issued to be given to this service
; Also referenced as "Application Id" and "Resource Id"
; example: audience="2814e709-6a0e-4861-9594-d3b6e2b81331"
audience="${?PCS_AUTH_AUDIENCE}"
; When validating the token expiration, allows some clock skew
; Default: 2 minutes
clock_skew_seconds = 300


; For more information about ASP.NET logging see
; https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging
; This configuration block is used only to capture
; internal logs generated by ASP.NET
; ASP.NET log levels: Trace, Debug, Information, Warning, Error, Critical
[Logging]
IncludeScopes = true
LogLevel:Default = "Error"
LogLevel:System = "Error"
LogLevel:Microsoft = "Error"
